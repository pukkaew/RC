<%- include('../layouts/main', { 
    title: t('images.title'),
    user: user 
}) %>

<div class="container-fluid">
    <!-- Page Header -->
    <div class="bg-white rounded-lg shadow-sm p-6 mb-6">
        <div class="flex justify-between items-center">
            <h1 class="text-2xl font-bold text-gray-800">
                <i class="fas fa-images mr-2"></i>
                <%= t('images.title') %>
            </h1>
            
            <div class="flex gap-2">
                <button onclick="downloadSelected()" class="btn btn-secondary" disabled id="downloadBtn">
                    <i class="fas fa-download mr-2"></i>
                    <%= t('images.download_selected') %>
                    <span id="selectedCount" class="ml-1 bg-blue-600 text-white px-2 py-1 rounded-full text-xs hidden">0</span>
                </button>
                
                <% if (user.role === 'manager' || user.role === 'admin') { %>
                <button onclick="deleteSelected()" class="btn btn-danger" disabled id="deleteBtn">
                    <i class="fas fa-trash mr-2"></i>
                    <%= t('images.delete_selected') %>
                </button>
                <% } %>
            </div>
        </div>
    </div>

    <!-- Filters -->
    <div class="bg-white rounded-lg shadow-sm p-6 mb-6">
        <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
            <!-- Lot Filter -->
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">
                    <%= t('images.filter_by_lot') %>
                </label>
                <select id="lotFilter" class="form-select w-full">
                    <option value=""><%= t('common.all') %></option>
                    <% lots.forEach(lot => { %>
                        <option value="<%= lot.lot_id %>" <%= selectedLot == lot.lot_id ? 'selected' : '' %>>
                            <%= lot.lot_number %> (<%= lot.image_count %>)
                        </option>
                    <% }) %>
                </select>
            </div>

            <!-- Date Range -->
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">
                    <%= t('images.start_date') %>
                </label>
                <input type="date" id="startDate" class="form-input w-full" value="<%= startDate %>">
            </div>

            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">
                    <%= t('images.end_date') %>
                </label>
                <input type="date" id="endDate" class="form-input w-full" value="<%= endDate %>">
            </div>

            <!-- Search -->
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">
                    <%= t('common.search') %>
                </label>
                <div class="relative">
                    <input type="text" id="searchInput" class="form-input w-full pl-10" 
                           placeholder="<%= t('images.search_placeholder') %>" value="<%= search %>">
                    <i class="fas fa-search absolute left-3 top-3 text-gray-400"></i>
                </div>
            </div>
        </div>

        <div class="mt-4 flex justify-between items-center">
            <button onclick="applyFilters()" class="btn btn-primary">
                <i class="fas fa-filter mr-2"></i>
                <%= t('common.apply_filters') %>
            </button>

            <button onclick="resetFilters()" class="btn btn-secondary">
                <i class="fas fa-times mr-2"></i>
                <%= t('common.reset') %>
            </button>
        </div>
    </div>

    <!-- View Toggle and Info -->
    <div class="bg-white rounded-lg shadow-sm p-4 mb-6">
        <div class="flex justify-between items-center">
            <div class="text-gray-600">
                <%= t('common.showing') %> 
                <span class="font-semibold"><%= (pagination.currentPage - 1) * pagination.limit + 1 %></span>
                - 
                <span class="font-semibold"><%= Math.min(pagination.currentPage * pagination.limit, pagination.total) %></span>
                <%= t('common.of') %> 
                <span class="font-semibold"><%= pagination.total %></span>
                <%= t('images.images') %>
            </div>

            <div class="flex gap-2">
                <button onclick="setView('grid')" class="view-toggle px-3 py-2 rounded <%= viewMode === 'grid' ? 'bg-blue-500 text-white' : 'bg-gray-200' %>">
                    <i class="fas fa-th"></i>
                </button>
                <button onclick="setView('list')" class="view-toggle px-3 py-2 rounded <%= viewMode === 'list' ? 'bg-blue-500 text-white' : 'bg-gray-200' %>">
                    <i class="fas fa-list"></i>
                </button>
            </div>
        </div>
    </div>

    <!-- Images Container -->
    <div class="bg-white rounded-lg shadow-sm p-6">
        <% if (images.length === 0) { %>
            <div class="text-center py-12">
                <i class="fas fa-images text-6xl text-gray-300 mb-4"></i>
                <p class="text-gray-500"><%= t('images.no_images') %></p>
            </div>
        <% } else { %>
            <!-- Grid View -->
            <div id="gridView" class="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4 <%= viewMode !== 'grid' ? 'hidden' : '' %>">
                <% images.forEach(image => { %>
                    <div class="image-card relative group cursor-pointer rounded-lg overflow-hidden shadow-md hover:shadow-lg transition-shadow">
                        <input type="checkbox" class="image-checkbox absolute top-2 left-2 z-10" 
                               data-id="<%= image.image_id %>" 
                               onclick="updateSelection(event)">
                        
                        <img src="<%= image.file_path %>" 
                             alt="<%= image.file_name %>"
                             class="w-full h-48 object-cover"
                             onclick="openLightbox('<%= image.image_id %>')"
                             loading="lazy">
                        
                        <div class="absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/70 to-transparent p-2">
                            <p class="text-white text-xs truncate"><%= image.file_name %></p>
                            <p class="text-white text-xs opacity-75"><%= formatDateTime(image.uploaded_at, locale) %></p>
                        </div>

                        <div class="absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity">
                            <button onclick="downloadImage('<%= image.image_id %>')" 
                                    class="bg-white rounded-full p-2 shadow-md hover:bg-gray-100 mr-1">
                                <i class="fas fa-download text-gray-600 text-xs"></i>
                            </button>
                            <% if (user.role === 'manager' || user.role === 'admin') { %>
                            <button onclick="deleteImage('<%= image.image_id %>')" 
                                    class="bg-white rounded-full p-2 shadow-md hover:bg-red-100">
                                <i class="fas fa-trash text-red-600 text-xs"></i>
                            </button>
                            <% } %>
                        </div>
                    </div>
                <% }) %>
            </div>

            <!-- List View -->
            <div id="listView" class="<%= viewMode !== 'list' ? 'hidden' : '' %>">
                <table class="w-full">
                    <thead>
                        <tr class="border-b">
                            <th class="text-left p-2">
                                <input type="checkbox" id="selectAllList" onclick="toggleSelectAll()">
                            </th>
                            <th class="text-left p-2"><%= t('images.preview') %></th>
                            <th class="text-left p-2"><%= t('images.filename') %></th>
                            <th class="text-left p-2"><%= t('images.lot') %></th>
                            <th class="text-left p-2"><%= t('images.size') %></th>
                            <th class="text-left p-2"><%= t('images.uploaded') %></th>
                            <th class="text-left p-2"><%= t('common.actions') %></th>
                        </tr>
                    </thead>
                    <tbody>
                        <% images.forEach(image => { %>
                            <tr class="border-b hover:bg-gray-50">
                                <td class="p-2">
                                    <input type="checkbox" class="image-checkbox" 
                                           data-id="<%= image.image_id %>" 
                                           onclick="updateSelection()">
                                </td>
                                <td class="p-2">
                                    <img src="<%= image.file_path %>" 
                                         alt="<%= image.file_name %>"
                                         class="w-16 h-16 object-cover rounded cursor-pointer"
                                         onclick="openLightbox('<%= image.image_id %>')">
                                </td>
                                <td class="p-2">
                                    <p class="font-medium"><%= image.file_name %></p>
                                    <p class="text-sm text-gray-500"><%= image.mime_type %></p>
                                </td>
                                <td class="p-2">
                                    <a href="/lots/<%= image.lot_id %>" class="text-blue-600 hover:underline">
                                        <%= image.lot_number %>
                                    </a>
                                </td>
                                <td class="p-2">
                                    <p><%= formatFileSize(image.original_size) %></p>
                                    <% if (image.compressed_size) { %>
                                        <p class="text-sm text-gray-500">
                                            <%= t('images.compressed') %>: <%= formatFileSize(image.compressed_size) %>
                                        </p>
                                    <% } %>
                                </td>
                                <td class="p-2">
                                    <p><%= formatDateTime(image.uploaded_at, locale) %></p>
                                    <p class="text-sm text-gray-500"><%= image.uploaded_by_name || image.uploaded_by %></p>
                                </td>
                                <td class="p-2">
                                    <button onclick="downloadImage('<%= image.image_id %>')" 
                                            class="btn btn-sm btn-secondary mr-1">
                                        <i class="fas fa-download"></i>
                                    </button>
                                    <% if (user.role === 'manager' || user.role === 'admin') { %>
                                    <button onclick="deleteImage('<%= image.image_id %>')" 
                                            class="btn btn-sm btn-danger">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                    <% } %>
                                </td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
            </div>
        <% } %>
    </div>

    <!-- Pagination -->
    <% if (pagination.totalPages > 1) { %>
        <%- include('../partials/pagination', { pagination: pagination }) %>
    <% } %>
</div>

<!-- Lightbox Modal -->
<div id="lightbox" class="fixed inset-0 bg-black bg-opacity-90 z-50 hidden">
    <div class="h-full flex items-center justify-center p-4">
        <button onclick="closeLightbox()" class="absolute top-4 right-4 text-white text-3xl hover:text-gray-300">
            <i class="fas fa-times"></i>
        </button>
        
        <button onclick="previousImage()" class="absolute left-4 text-white text-3xl hover:text-gray-300">
            <i class="fas fa-chevron-left"></i>
        </button>
        
        <button onclick="nextImage()" class="absolute right-4 text-white text-3xl hover:text-gray-300">
            <i class="fas fa-chevron-right"></i>
        </button>
        
        <div class="max-w-6xl max-h-full">
            <img id="lightboxImage" src="" alt="" class="max-w-full max-h-full">
            <div class="text-white text-center mt-4">
                <p id="lightboxTitle" class="text-lg font-medium"></p>
                <p id="lightboxInfo" class="text-sm opacity-75"></p>
            </div>
        </div>
    </div>
</div>

<script>
// Image data for lightbox navigation
const imageData = <%- JSON.stringify(images.map(img => ({
    id: img.image_id,
    path: img.file_path,
    name: img.file_name,
    lot: img.lot_number,
    date: formatDateTime(img.uploaded_at, locale)
}))) %>;

let currentImageIndex = 0;
let selectedImages = new Set();

// View mode functions
function setView(mode) {
    localStorage.setItem('imageViewMode', mode);
    const url = new URL(window.location);
    url.searchParams.set('view', mode);
    window.location = url;
}

// Filter functions
function applyFilters() {
    const lot = document.getElementById('lotFilter').value;
    const startDate = document.getElementById('startDate').value;
    const endDate = document.getElementById('endDate').value;
    const search = document.getElementById('searchInput').value;
    
    const url = new URL(window.location);
    if (lot) url.searchParams.set('lot', lot);
    else url.searchParams.delete('lot');
    
    if (startDate) url.searchParams.set('start_date', startDate);
    else url.searchParams.delete('start_date');
    
    if (endDate) url.searchParams.set('end_date', endDate);
    else url.searchParams.delete('end_date');
    
    if (search) url.searchParams.set('search', search);
    else url.searchParams.delete('search');
    
    url.searchParams.set('page', '1'); // Reset to first page
    window.location = url;
}

function resetFilters() {
    const url = new URL(window.location);
    url.searchParams.delete('lot');
    url.searchParams.delete('start_date');
    url.searchParams.delete('end_date');
    url.searchParams.delete('search');
    url.searchParams.set('page', '1');
    window.location = url;
}

// Selection functions
function updateSelection(event) {
    if (event) event.stopPropagation();
    
    selectedImages.clear();
    document.querySelectorAll('.image-checkbox:checked').forEach(cb => {
        selectedImages.add(cb.dataset.id);
    });
    
    const count = selectedImages.size;
    const downloadBtn = document.getElementById('downloadBtn');
    const deleteBtn = document.getElementById('deleteBtn');
    const selectedCount = document.getElementById('selectedCount');
    
    downloadBtn.disabled = count === 0;
    if (deleteBtn) deleteBtn.disabled = count === 0;
    
    if (count > 0) {
        selectedCount.textContent = count;
        selectedCount.classList.remove('hidden');
    } else {
        selectedCount.classList.add('hidden');
    }
}

function toggleSelectAll() {
    const selectAll = document.getElementById('selectAllList');
    document.querySelectorAll('.image-checkbox').forEach(cb => {
        cb.checked = selectAll.checked;
    });
    updateSelection();
}

// Image actions
async function downloadImage(imageId) {
    window.location.href = `/api/images/${imageId}/download`;
}

async function downloadSelected() {
    if (selectedImages.size === 0) return;
    
    const ids = Array.from(selectedImages).join(',');
    window.location.href = `/api/images/download?ids=${ids}`;
}

async function deleteImage(imageId) {
    if (!confirm('<%= t("images.confirm_delete") %>')) return;
    
    try {
        const response = await fetch(`/api/images/${imageId}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            }
        });
        
        if (response.ok) {
            showAlert('success', '<%= t("images.delete_success") %>');
            setTimeout(() => location.reload(), 1000);
        } else {
            const data = await response.json();
            showAlert('error', data.message || '<%= t("images.delete_error") %>');
        }
    } catch (error) {
        showAlert('error', '<%= t("common.error_occurred") %>');
    }
}

async function deleteSelected() {
    if (selectedImages.size === 0) return;
    
    const count = selectedImages.size;
    if (!confirm(`<%= t("images.confirm_delete_multiple") %>`.replace('{count}', count))) return;
    
    try {
        const response = await fetch('/api/images/bulk-delete', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                image_ids: Array.from(selectedImages)
            })
        });
        
        if (response.ok) {
            showAlert('success', '<%= t("images.bulk_delete_success") %>');
            setTimeout(() => location.reload(), 1000);
        } else {
            const data = await response.json();
            showAlert('error', data.message || '<%= t("images.bulk_delete_error") %>');
        }
    } catch (error) {
        showAlert('error', '<%= t("common.error_occurred") %>');
    }
}

// Lightbox functions
function openLightbox(imageId) {
    const index = imageData.findIndex(img => img.id == imageId);
    if (index !== -1) {
        currentImageIndex = index;
        updateLightbox();
        document.getElementById('lightbox').classList.remove('hidden');
    }
}

function closeLightbox() {
    document.getElementById('lightbox').classList.add('hidden');
}

function updateLightbox() {
    const image = imageData[currentImageIndex];
    document.getElementById('lightboxImage').src = image.path;
    document.getElementById('lightboxTitle').textContent = image.name;
    document.getElementById('lightboxInfo').textContent = `${image.lot} • ${image.date}`;
}

function previousImage() {
    currentImageIndex = (currentImageIndex - 1 + imageData.length) % imageData.length;
    updateLightbox();
}

function nextImage() {
    currentImageIndex = (currentImageIndex + 1) % imageData.length;
    updateLightbox();
}

// Keyboard navigation
document.addEventListener('keydown', (e) => {
    if (!document.getElementById('lightbox').classList.contains('hidden')) {
        if (e.key === 'Escape') closeLightbox();
        else if (e.key === 'ArrowLeft') previousImage();
        else if (e.key === 'ArrowRight') nextImage();
    }
});
</script>
<!-- Global Scripts -->
<script src="/js/app.js"></script>

<script>
    // Global configuration
    window.appConfig = {
        baseUrl: '<%= process.env.APP_URL || "" %>',
        language: '<%= currentLang %>',
        translations: window.translations || {},
        user: {
            id: <%= currentUser.admin_id %>,
            name: '<%= currentUser.full_name %>',
            role: '<%= currentUser.role %>'
        }
    };
    
    // CSRF token for AJAX requests
    $.ajaxSetup({
        headers: {
            'X-Requested-With': 'XMLHttpRequest'
        }
    });
    
    // Global error handler for AJAX
    $(document).ajaxError(function(event, jqXHR, ajaxSettings, thrownError) {
        if (jqXHR.status === 401) {
            // Session expired
            Swal.fire({
                icon: 'warning',
                title: '<%= t("auth:errors.session_expired") %>',
                text: '<%= t("auth:errors.login_required") %>',
                confirmButtonColor: '#9333ea'
            }).then(() => {
                window.location.href = '/auth/login';
            });
        } else if (jqXHR.status === 403) {
            // Forbidden
            Swal.fire({
                icon: 'error',
                title: '<%= t("common:errors.forbidden") %>',
                text: '<%= t("auth:errors.insufficient_permissions") %>',
                confirmButtonColor: '#9333ea'
            });
        } else if (jqXHR.status === 429) {
            // Rate limit
            Swal.fire({
                icon: 'warning',
                title: '<%= t("common:errors.rate_limit_exceeded") %>',
                text: '<%= t("common:messages.please_wait") %>',
                confirmButtonColor: '#9333ea'
            });
        }
    });
    
    // DataTables default configuration
    $.extend(true, $.fn.dataTable.defaults, {
        language: {
            url: `/vendor/datatables/i18n/${appConfig.language}.json`
        },
        pageLength: 25,
        responsive: true,
        processing: true,
        stateSave: true,
        dom: '<"flex flex-col sm:flex-row sm:items-center sm:justify-between mb-4"<"mb-2 sm:mb-0"l><"mb-2 sm:mb-0"f>>rtip',
        lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, '<%= t("common:table.all") %>']],
        initComplete: function() {
            // Custom styling for DataTables elements
            $('.dataTables_length select').addClass('form-select text-sm');
            $('.dataTables_filter input').addClass('form-input text-sm').attr('placeholder', '<%= t("common:actions.search") %>...');
        }
    });
    
    // Utility functions
    window.Utils = {
        // Format file size
        formatFileSize: function(bytes) {
            if (!bytes) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        },
        
        // Format date
        formatDate: function(date) {
            return moment(date).format('<%= currentLang === "th-TH" ? "DD/MM/YYYY" : "MM/DD/YYYY" %>');
        },
        
        // Format datetime
        formatDateTime: function(date) {
            return moment(date).format('<%= currentLang === "th-TH" ? "DD/MM/YYYY HH:mm à¸™." : "MM/DD/YYYY hh:mm A" %>');
        },
        
        // Time ago
        timeAgo: function(date) {
            return moment(date).fromNow();
        },
        
        // Show loading
        showLoading: function(text) {
            Swal.fire({
                title: text || '<%= t("common:messages.loading") %>',
                allowOutsideClick: false,
                allowEscapeKey: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });
        },
        
        // Hide loading
        hideLoading: function() {
            Swal.close();
        },
        
        // Confirm dialog
        confirm: function(options) {
            return Swal.fire({
                title: options.title || '<%= t("common:messages.confirm_action") %>',
                text: options.text || '',
                icon: options.icon || 'warning',
                showCancelButton: true,
                confirmButtonColor: '#9333ea',
                cancelButtonColor: '#6b7280',
                confirmButtonText: options.confirmText || '<%= t("common:actions.confirm") %>',
                cancelButtonText: options.cancelText || '<%= t("common:actions.cancel") %>'
            });
        },
        
        // Success message
        success: function(message) {
            Swal.fire({
                icon: 'success',
                title: '<%= t("common:status.success") %>',
                text: message,
                confirmButtonColor: '#9333ea'
            });
        },
        
        // Error message
        error: function(message) {
            Swal.fire({
                icon: 'error',
                title: '<%= t("common:status.error") %>',
                text: message,
                confirmButtonColor: '#9333ea'
            });
        }
    };
    
    // Initialize tooltips
    $(document).ready(function() {
        // Initialize any tooltips
        $('[data-toggle="tooltip"]').tooltip();
        
        // Prevent double form submission
        $('form').on('submit', function() {
            const $form = $(this);
            const $submitBtn = $form.find('button[type="submit"]');
            
            if ($form.data('submitted') === true) {
                return false;
            }
            
            $form.data('submitted', true);
            $submitBtn.prop('disabled', true).html('<i class="fas fa-spinner fa-spin mr-2"></i>' + $submitBtn.text());
        });
    });
</script>